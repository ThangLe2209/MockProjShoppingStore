// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingStore.API.DbContexts;

#nullable disable

namespace ShoppingStore.API.Migrations
{
    [DbContext(typeof(ShoppingStoreContext))]
    [Migration("20240822020730_InitialProductBrandCategory")]
    partial class InitialProductBrandCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ShoppingStore.Model.BrandModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b468b7a6-17d3-447c-8672-2737bd30988c"),
                            Description = "Apple is large brand in the world",
                            Name = "Apple",
                            Slug = "apple",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fe684fa0-1960-4f12-809d-3229e50c870e"),
                            Description = "Samsung is large brand in the world",
                            Name = "Samsung",
                            Slug = "samsung",
                            Status = 1
                        });
                });

            modelBuilder.Entity("ShoppingStore.Model.CategoryModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f8dae822-5c25-407d-9a03-cd7afeb5de82"),
                            Description = "Macbook is large Product in the world",
                            Name = "Macbook",
                            Slug = "macbook",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("de6c3b25-04ba-4fb2-87a8-3a87d7542693"),
                            Description = "Pc is large Product in the world",
                            Name = "Pc",
                            Slug = "pc",
                            Status = 1
                        });
                });

            modelBuilder.Entity("ShoppingStore.Model.ProductModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df145648-9ce7-4dbd-bddd-f7bc93baf49d"),
                            BrandId = new Guid("b468b7a6-17d3-447c-8672-2737bd30988c"),
                            CategoryId = new Guid("f8dae822-5c25-407d-9a03-cd7afeb5de82"),
                            Description = "Macbook is the Best",
                            Image = "1.jpg",
                            Name = "Macbook",
                            Price = 1233m,
                            Slug = "macbook"
                        },
                        new
                        {
                            Id = new Guid("b47faf1c-113f-4e82-9441-70b8412d62f5"),
                            BrandId = new Guid("fe684fa0-1960-4f12-809d-3229e50c870e"),
                            CategoryId = new Guid("de6c3b25-04ba-4fb2-87a8-3a87d7542693"),
                            Description = "Pc is the Best",
                            Image = "1.jpg",
                            Name = "Pc",
                            Price = 1233m,
                            Slug = "pc"
                        });
                });

            modelBuilder.Entity("ShoppingStore.Model.ProductModel", b =>
                {
                    b.HasOne("ShoppingStore.Model.BrandModel", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShoppingStore.Model.CategoryModel", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
